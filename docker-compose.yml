services:
  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    env_file:
      - .env

  backend:
    container_name: django-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: django-backend:latest
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - redis
      - postgres

  worker:
    container_name: celery-worker
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: celery-worker:latest
    command: celery -A core worker --loglevel=info
    depends_on:
      - redis
      - backend
    volumes:
      - ./backend:/app
    env_file:
      - .env

  beat:
    container_name: celery-beat
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: celery-beat:latest
    command: celery -A core beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - redis
      - backend
    volumes:
      - ./backend:/app
    env_file:
      - .env

  postgres:
    container_name: postgres-db
    image: postgres:16.2
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  smtp4dev:
    container_name: smtp4dev-mail
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - '5001:80'
      - '2525:25'
      - '144:143'
    volumes:
      - smtp4dev-data:/smtp4dev
    env_file:
      - .env

volumes:
  smtp4dev-data:
  postgres_data: